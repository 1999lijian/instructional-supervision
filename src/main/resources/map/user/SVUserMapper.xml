<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.L.mapper.user.SVUserMapper">

    <resultMap id="SVUserMap" type="com.L.entity.user.SVUser">
        <id property="svId" column="svId"></id>
        <result property="svuid" column="svuid"></result>
        <result property="svName" column="svName"></result>
        <result property="svSex" column="svSex"></result>

        <result property="svTitle" column="svTitle"></result>
        <result property="svCollegeNo" column="svCollegeNo"></result>
        <result property="svLevel" column="svLevel"></result>
        <result property="svPhone" column="svPhone"></result>
        <result property="svEmail" column="svEmail"></result>
        <result property="svQQ" column="svQQ"></result>
        <result property="svNotes" column="svNotes"></result>

        <association property="uUser" javaType="com.L.entity.user.UUser">
            <id property="uId" column="uId"></id>
            <result property="uName" column="uName"></result>
            <result property="uPassword" column="uPassword"></result>
            <result property="uRoleNo" column="uRoleNo"></result>
        </association>


        <association property="collegeSVU" javaType="com.L.entity.general.College">
            <id property="collegeId" column="collegeId"></id>
            <result property="collegeName" column="collegeName"></result>
        </association>
    </resultMap>


    <update id="updateSVUser">

        update sv_user,
            u_user
        set
            uPassword=#{uUser.uPassword},
            svName=#{svName}, svSex=#{svSex}, svTitle=#{svTitle},
            svCollegeNo=#{svCollegeNo}, svLevel=#{svLevel}, svPhone=#{svPhone}, svEmail=#{svEmail}, svQQ=#{svQQ}, svNotes=#{svNotes}
        where u_user.uId = #{svuid}
          and svId=#{svId}

    </update>


    <select id="updateSVUserId" resultMap="SVUserMap">
        select *
        from sv_user,
             u_user
        where sv_user.svuid = u_user.uId
          and sv_user.svid = #{tid}

    </select>

    <!--  SELECT LAST_INSERT_ID()  获取最后插入的数据的自增主键值  -->
    <insert id="addSVUser">
        INSERT INTO sv_user (svuid, svName, svSex, svTitle, svCollegeNo, svLevel, svPhone, svEmail, svQQ,
                             svNotes)
        VALUES ((SELECT LAST_INSERT_ID()), #{svName}, #{svSex},
                #{svTitle}, #{svCollegeNo}, #{svLevel}, #{svPhone}, #{svEmail},
                #{svQQ}, #{svNotes})
    </insert>

    <insert id="addAll">
        INSERT INTO u_user (uName, uPassword, uRoleNo)
        VALUES (#{uName}, #{uPassword}, #{uRoleNo})
    </insert>


    <!--      INNER JOIN : 用于将两个表中的匹配行连接在一起。
    它根据两个表之间的共同列进行连接，并返回满足连接条件的结果集。  -->
    <delete id="deleteSVUserId">

        delete
        sv_user,u_user
        from sv_user
        INNER JOIN u_user ON svuid = uId
        where svId =
        #{svId}

    </delete>

    <!--  count(*): 用于计算指定表中的行数。它返回一个表示表中行数的整数值-->
    <select id="countSVUser" resultType="java.lang.Integer">

        select count(*)
        from sv_user
    </select>


    <select id="countSVUserAll" resultType="java.lang.Integer">

        SELECT COUNT(*)
        FROM sv_user
        WHERE svName LIKE CONCAT('%', #{svName}, '%')  </select>


    <!--
    order by uid asc: 用于按照 "uid" 列的值升序对结果集进行排序
      limit : 限制结果集返回的行数的关键字
    -->
    <select id="findAllSVUserList" resultMap="SVUserMap">
        select svId,
               uPassword,
               svName,
               svSex,
               svTitle,
               college.collegeName,
               svLevel,
               svPhone,
               svEmail,
               svQQ,
               svNotes
        from sv_user,
             u_user,
             college
        where uId = svuid
          and sv_user.svCollegeNo = college.collegeId
        order by uid asc
            limit #{startIndex}, #{pageSize}
    </select>
    <select id="findAllCollege" resultType="com.L.entity.general.College">

        select *
        from college
    </select>

</mapper>



